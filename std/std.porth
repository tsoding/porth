// TODO: NULL should have type ptr
const NULL 0 end

// TODO: using procs for true/false is kinda wasteful
proc true  1 cast(bool) end
proc false 0 cast(bool) end

const sizeof(u64) 8 end
const sizeof(u32) 4 end
const sizeof(ptr) sizeof(u64) end

proc @ptr @64 cast(ptr) end

/// Standard streams
const stdin  0 end
const stdout 1 end
const stderr 2 end

/// Syscalls
// Stolen from https://filippo.io/linux-syscall-table/
// Not all of the syscalls here are useful/implemented. I literally just copy-pasted them.
// We can clean this up later.
const SYS_read 0 end
const SYS_write 1 end
const SYS_open 2 end
const SYS_close 3 end
const SYS_stat 4 end
const SYS_fstat 5 end
const SYS_lstat 6 end
const SYS_poll 7 end
const SYS_lseek 8 end
const SYS_mmap 9 end
const SYS_mprotect 10 end
const SYS_munmap 11 end
const SYS_brk 12 end
const SYS_rt_sigaction 13 end
const SYS_rt_sigprocmask 14 end
const SYS_rt_sigreturn 15 end
const SYS_ioctl 16 end
const SYS_pread64 17 end
const SYS_pwrite64 18 end
const SYS_readv 19 end
const SYS_writev 20 end
const SYS_access 21 end
const SYS_pipe 22 end
const SYS_select 23 end
const SYS_sched_yield 24 end
const SYS_mremap 25 end
const SYS_msync 26 end
const SYS_mincore 27 end
const SYS_madvise 28 end
const SYS_shmget 29 end
const SYS_shmat 30 end
const SYS_shmctl 31 end
const SYS_dup 32 end
const SYS_dup2 33 end
const SYS_pause 34 end
const SYS_nanosleep 35 end
const SYS_getitimer 36 end
const SYS_alarm 37 end
const SYS_setitimer 38 end
const SYS_getpid 39 end
const SYS_sendfile 40 end
const SYS_socket 41 end
const SYS_connect 42 end
const SYS_accept 43 end
const SYS_sendto 44 end
const SYS_recvfrom 45 end
const SYS_sendmsg 46 end
const SYS_recvmsg 47 end
const SYS_shutdown 48 end
const SYS_bind 49 end
const SYS_listen 50 end
const SYS_getsockname 51 end
const SYS_getpeername 52 end
const SYS_socketpair 53 end
const SYS_setsockopt 54 end
const SYS_getsockopt 55 end
const SYS_clone 56 end
const SYS_fork 57 end
const SYS_vfork 58 end
const SYS_execve 59 end
const SYS_exit 60 end
const SYS_wait4 61 end
const SYS_kill 62 end
const SYS_uname 63 end
const SYS_semget 64 end
const SYS_semop 65 end
const SYS_semctl 66 end
const SYS_shmdt 67 end
const SYS_msgget 68 end
const SYS_msgsnd 69 end
const SYS_msgrcv 70 end
const SYS_msgctl 71 end
const SYS_fcntl 72 end
const SYS_flock 73 end
const SYS_fsync 74 end
const SYS_fdatasync 75 end
const SYS_truncate 76 end
const SYS_ftruncate 77 end
const SYS_getdents 78 end
const SYS_getcwd 79 end
const SYS_chdir 80 end
const SYS_fchdir 81 end
const SYS_rename 82 end
const SYS_mkdir 83 end
const SYS_rmdir 84 end
const SYS_creat 85 end
const SYS_link 86 end
const SYS_unlink 87 end
const SYS_symlink 88 end
const SYS_readlink 89 end
const SYS_chmod 90 end
const SYS_fchmod 91 end
const SYS_chown 92 end
const SYS_fchown 93 end
const SYS_lchown 94 end
const SYS_umask 95 end
const SYS_gettimeofday 96 end
const SYS_getrlimit 97 end
const SYS_getrusage 98 end
const SYS_sysinfo 99 end
const SYS_times 100 end
const SYS_ptrace 101 end
const SYS_getuid 102 end
const SYS_syslog 103 end
const SYS_getgid 104 end
const SYS_setuid 105 end
const SYS_setgid 106 end
const SYS_geteuid 107 end
const SYS_getegid 108 end
const SYS_setpgid 109 end
const SYS_getppid 110 end
const SYS_getpgrp 111 end
const SYS_setsid 112 end
const SYS_setreuid 113 end
const SYS_setregid 114 end
const SYS_getgroups 115 end
const SYS_setgroups 116 end
const SYS_setresuid 117 end
const SYS_getresuid 118 end
const SYS_setresgid 119 end
const SYS_getresgid 120 end
const SYS_getpgid 121 end
const SYS_setfsuid 122 end
const SYS_setfsgid 123 end
const SYS_getsid 124 end
const SYS_capget 125 end
const SYS_capset 126 end
const SYS_rt_sigpending 127 end
const SYS_rt_sigtimedwait 128 end
const SYS_rt_sigqueueinfo 129 end
const SYS_rt_sigsuspend 130 end
const SYS_sigaltstack 131 end
const SYS_utime 132 end
const SYS_mknod 133 end
const SYS_uselib 134 end
const SYS_personality 135 end
const SYS_ustat 136 end
const SYS_statfs 137 end
const SYS_fstatfs 138 end
const SYS_sysfs 139 end
const SYS_getpriority 140 end
const SYS_setpriority 141 end
const SYS_sched_setparam 142 end
const SYS_sched_getparam 143 end
const SYS_sched_setscheduler 144 end
const SYS_sched_getscheduler 145 end
const SYS_sched_get_priority_max 146 end
const SYS_sched_get_priority_min 147 end
const SYS_sched_rr_get_interval 148 end
const SYS_mlock 149 end
const SYS_munlock 150 end
const SYS_mlockall 151 end
const SYS_munlockall 152 end
const SYS_vhangup 153 end
const SYS_modify_ldt 154 end
const SYS_pivot_root 155 end
const SYS__sysctl 156 end
const SYS_prctl 157 end
const SYS_arch_prctl 158 end
const SYS_adjtimex 159 end
const SYS_setrlimit 160 end
const SYS_chroot 161 end
const SYS_sync 162 end
const SYS_acct 163 end
const SYS_settimeofday 164 end
const SYS_mount 165 end
const SYS_umount2 166 end
const SYS_swapon 167 end
const SYS_swapoff 168 end
const SYS_reboot 169 end
const SYS_sethostname 170 end
const SYS_setdomainname 171 end
const SYS_iopl 172 end
const SYS_ioperm 173 end
const SYS_create_module 174 end
const SYS_init_module 175 end
const SYS_delete_module 176 end
const SYS_get_kernel_syms 177 end
const SYS_query_module 178 end
const SYS_quotactl 179 end
const SYS_nfsservctl 180 end
const SYS_getpmsg 181 end
const SYS_putpmsg 182 end
const SYS_afs_syscall 183 end
const SYS_tuxcall 184 end
const SYS_security 185 end
const SYS_gettid 186 end
const SYS_readahead 187 end
const SYS_setxattr 188 end
const SYS_lsetxattr 189 end
const SYS_fsetxattr 190 end
const SYS_getxattr 191 end
const SYS_lgetxattr 192 end
const SYS_fgetxattr 193 end
const SYS_listxattr 194 end
const SYS_llistxattr 195 end
const SYS_flistxattr 196 end
const SYS_removexattr 197 end
const SYS_lremovexattr 198 end
const SYS_fremovexattr 199 end
const SYS_tkill 200 end
const SYS_time 201 end
const SYS_futex 202 end
const SYS_sched_setaffinity 203 end
const SYS_sched_getaffinity 204 end
const SYS_set_thread_area 205 end
const SYS_io_setup 206 end
const SYS_io_destroy 207 end
const SYS_io_getevents 208 end
const SYS_io_submit 209 end
const SYS_io_cancel 210 end
const SYS_get_thread_area 211 end
const SYS_lookup_dcookie 212 end
const SYS_epoll_create 213 end
const SYS_epoll_ctl_old 214 end
const SYS_epoll_wait_old 215 end
const SYS_remap_file_pages 216 end
const SYS_getdents64 217 end
const SYS_set_tid_address 218 end
const SYS_restart_syscall 219 end
const SYS_semtimedop 220 end
const SYS_fadvise64 221 end
const SYS_timer_create 222 end
const SYS_timer_settime 223 end
const SYS_timer_gettime 224 end
const SYS_timer_getoverrun 225 end
const SYS_timer_delete 226 end
const SYS_clock_settime 227 end
const SYS_clock_gettime 228 end
const SYS_clock_getres 229 end
const SYS_clock_nanosleep 230 end
const SYS_exit_group 231 end
const SYS_epoll_wait 232 end
const SYS_epoll_ctl 233 end
const SYS_tgkill 234 end
const SYS_utimes 235 end
const SYS_vserver 236 end
const SYS_mbind 237 end
const SYS_set_mempolicy 238 end
const SYS_get_mempolicy 239 end
const SYS_mq_open 240 end
const SYS_mq_unlink 241 end
const SYS_mq_timedsend 242 end
const SYS_mq_timedreceive 243 end
const SYS_mq_notify 244 end
const SYS_mq_getsetattr 245 end
const SYS_kexec_load 246 end
const SYS_waitid 247 end
const SYS_add_key 248 end
const SYS_request_key 249 end
const SYS_keyctl 250 end
const SYS_ioprio_set 251 end
const SYS_ioprio_get 252 end
const SYS_inotify_init 253 end
const SYS_inotify_add_watch 254 end
const SYS_inotify_rm_watch 255 end
const SYS_migrate_pages 256 end
const SYS_openat 257 end
const SYS_mkdirat 258 end
const SYS_mknodat 259 end
const SYS_fchownat 260 end
const SYS_futimesat 261 end
const SYS_newfstatat 262 end
const SYS_unlinkat 263 end
const SYS_renameat 264 end
const SYS_linkat 265 end
const SYS_symlinkat 266 end
const SYS_readlinkat 267 end
const SYS_fchmodat 268 end
const SYS_faccessat 269 end
const SYS_pselect6 270 end
const SYS_ppoll 271 end
const SYS_unshare 272 end
const SYS_set_robust_list 273 end
const SYS_get_robust_list 274 end
const SYS_splice 275 end
const SYS_tee 276 end
const SYS_sync_file_range 277 end
const SYS_vmsplice 278 end
const SYS_move_pages 279 end
const SYS_utimensat 280 end
const SYS_epoll_pwait 281 end
const SYS_signalfd 282 end
const SYS_timerfd_create 283 end
const SYS_eventfd 284 end
const SYS_fallocate 285 end
const SYS_timerfd_settime 286 end
const SYS_timerfd_gettime 287 end
const SYS_accept4 288 end
const SYS_signalfd4 289 end
const SYS_eventfd2 290 end
const SYS_epoll_create1 291 end
const SYS_dup3 292 end
const SYS_pipe2 293 end
const SYS_inotify_init1 294 end
const SYS_preadv 295 end
const SYS_pwritev 296 end
const SYS_rt_tgsigqueueinfo 297 end
const SYS_perf_event_open 298 end
const SYS_recvmmsg 299 end
const SYS_fanotify_init 300 end
const SYS_fanotify_mark 301 end
const SYS_prlimit64 302 end
const SYS_name_to_handle_at 303 end
const SYS_open_by_handle_at 304 end
const SYS_clock_adjtime 305 end
const SYS_syncfs 306 end
const SYS_sendmmsg 307 end
const SYS_setns 308 end
const SYS_getcpu 309 end
const SYS_process_vm_readv 310 end
const SYS_process_vm_writev 311 end
const SYS_kcmp 312 end
const SYS_finit_module 313 end

const AT_FDCWD -100 end

const O_RDONLY 0 end
const O_WRONLY 1 end
const O_RDWR   2 end
const O_CREAT 64 end

const CLOCK_MONOTONIC 1 end
const TIMER_ABSTIME 1 end

const MAP_PRIVATE 2 end
const PROT_READ 1 end

const sizeof(timespec) 16 end

const sizeof(stat) 144 end
proc stat.st_dev 0 + end
proc stat.st_ino 8 + end
proc stat.st_mode 24 + end
proc stat.st_nlink 16 + end
proc stat.st_uid 28 + end
proc stat.st_gid 32 + end
proc stat.st_rdev 40 + end
proc stat.st_size 48 + end
proc @stat.st_size stat.st_size @64 end
proc stat.st_blksize 56 + end
proc stat.st_blocks 64 + end
proc stat.st_atim 72 + end
proc stat.st_mtim 88 + end
proc stat.st_ctim 104 + end
const sizeof(stat.st_dev) sizeof(u64) end
const sizeof(stat.st_ino) sizeof(u64) end
const sizeof(stat.st_mode) sizeof(u32) end
const sizeof(stat.st_nlink) sizeof(u64) end
const sizeof(stat.st_uid) sizeof(u32) end
const sizeof(stat.st_gid) sizeof(u32) end
const sizeof(stat.st_rdev) sizeof(u64) end
const sizeof(stat.st_size) sizeof(u64) end
const sizeof(stat.st_blksize) sizeof(u64) end
const sizeof(stat.st_blocks) sizeof(u64) end
const sizeof(stat.st_atim) sizeof(timespec) end
const sizeof(stat.st_mtim) sizeof(timespec) end
const sizeof(stat.st_ctim) sizeof(timespec) end

// Wrappers for common syscalls
proc write SYS_write syscall3 end
proc read SYS_read syscall3 end
proc openat SYS_openat syscall4 end
proc fstat SYS_fstat syscall2 end
proc close SYS_close syscall1 end
proc exit SYS_exit syscall1 drop end
proc mmap SYS_mmap syscall6 end
proc clock_nanosleep SYS_clock_nanosleep syscall4 end
proc fork SYS_fork syscall0 end
proc getpid SYS_getpid syscall0 end
proc execve SYS_execve syscall3 end
proc wait4 SYS_wait4 syscall4 end

proc 2dup over over end
proc 2drop drop drop end

proc / divmod drop end
proc % divmod swap drop end
proc mod % end
proc div / end

proc nth_argv
  8 * argv + @64 cast(ptr)
end

proc inc64 dup @64 1 + swap !64 end
proc dec64 dup @64 1 - swap !64 end
proc inc32 dup @32 1 + swap !32 end
proc dec32 dup @32 1 - swap !32 end

proc cstrlen
  dup
  while dup @8 0 != do 1 + end
  swap -
end

proc cstreq
  while
    over @8 0 != over @8 0 != and if
       over @8 over @8 =
    else
       false
    end
  do
    1 + swap 1 +
  end
  @8 0 =
  swap @8 0 =
  and
end

proc cstr-to-str dup cstrlen swap end

// TODO: fputs should crash the app if write fails
proc fputs write drop end
proc puts stdout fputs end
proc eputs stderr fputs end

const offsetof(Str.count) sizeof(u64) offset end
const offsetof(Str.data) sizeof(ptr) offset end
const sizeof(Str) reset end

proc Str.count offsetof(Str.count) + end
proc Str.data offsetof(Str.data) + end
proc @Str.count Str.count @64 end
proc @Str.data Str.data  @64 cast(ptr) end
proc !Str.count Str.count !64 end
proc !Str.data Str.data  !64 end

proc @Str
  dup @Str.count
  swap @Str.data
end

proc !Str // count data dst -
  dup rot swap
  !Str.data
  !Str.count
end

proc str-chop-one-left
   dup Str.count dec64
       Str.data inc64
end

proc str-trim-left // input --
  while 
    dup @Str.count 0 > if
      dup @Str.data @8 ' ' =
    else false end
  do
    dup str-chop-one-left
  end
  drop
end

proc str-chop-by-delim // delim line input
  memory delim sizeof(u64) end
  rot delim !64
  2dup @Str.data swap !Str.data
  over 0 swap !Str.count
  while
    dup @Str.count 0 > if
       dup @Str.data @8 delim @64 !=
    else false end
  do
    dup str-chop-one-left
    swap dup Str.count inc64 swap
  end
  dup @Str.count 0 > if
    dup str-chop-one-left
  end
  2drop
end

proc streq // n1 s1 n2 s2
  memory a sizeof(Str) end
  a !Str
  memory b sizeof(Str) end
  b !Str

  a @Str.count b @Str.count = if
    0 while
      dup a @Str.count < if
        dup a @Str.data + @8
        over b @Str.data + @8
        =
      else false end
    do 1 + end
    a @Str.count >=
  else false end
end

proc isdigit
  dup  '0' >=
  swap '9' <=
  and
end

proc try-parse-int // int ptr -- int err
  memory input sizeof(Str) end
  input !Str

  0 while
    input @Str.count 0 > if
      input @Str.data @8 isdigit
    else false end
  do
    10 * input @Str.data @8 '0' - +
    input str-chop-one-left
  end

  input @Str.count 0 <=
end

// Custom logical not, since the intrinsic `not` is the bitwise one and does not allow
// to properly invert a boolean.
proc lnot
  cast(int) 1 - cast(bool)
end

const PUTU_BUFFER_CAP 32 end
// TODO: fputu should fail if write call fails
// TODO: fputu does not print negative numbers
proc fputu // value fd --
  memory buffer PUTU_BUFFER_CAP end
  memory fd sizeof(u64) end
  fd !64

  dup 0 = if
    "0" fd @64 fputs
  else
    buffer PUTU_BUFFER_CAP +
    while over 0 > do
      1 - dup rot
      10 divmod
      rot swap '0' + swap !8 swap
    end

    dup
    buffer PUTU_BUFFER_CAP + swap - swap fd @64 fputs
  end
  drop
end

proc putu stdout fputu end
proc eputu stderr fputu end

// TODO: there is no fputi function that would print signed integers

proc memcpy // size src dst --
  memory src sizeof(ptr) end
  memory dst sizeof(ptr) end
  dst !64
  src !64
  while dup 0 > do
    src @64 cast(ptr) @8
    dst @64 cast(ptr) !8
    src inc64
    dst inc64
    1 -
  end drop
end

// Deprecated Words //////////
proc .64 swap !64 end
proc ,64 @64 end
proc ! !8 end
proc @ @8 end
proc . swap ! end
proc , @ end
proc cstr-to-pstr cstr-to-str end
memory mem 640000 end
proc nop end
proc fputd fputu end
proc eputd eputu end
proc putd putu end
//////////////////////////////
